Selenium shell:

The tool enables its user to perform a web test/scenario through its step-wise execution capabilities.  At every step, watch the result, as you slowly build up the sceanario.  An ideal tool for newbies to get started with automating tests using Selenium web driver, it also helps you get more adventurous, and efficient with automation, . The shell provides you with not just a very desirable handiness, but also great insights into the process of automation.

Some of the core features of this tool: 

- Stepwise execution of selenium-driven web tests.
- Interleaving manual steps with automation.
- Extremely simplified web element searches.
- Record and playback facilities - great replacement for Selenium IDE.
- Handles selenium actions class.
- Handles existing browser session well.
- Well-suited to run browser compatibility tests.
- Get attribute values of most recently found web-element
- Basic verification added (equality, containment of strings)
- "eval" to handle all other "unsupported features" (available in Selenium).
- Self-documented.  Type "?" inside the shell.  Type "?<command>" to get help on the command.

How to start
=========

1.  Watch the videos first, if you've not already.  
2.  Install Python2.7 from python.org.  By default, python will be installed in C:\Python27 folder.
3.  Install following python modules using pip (C:\Python27\Scripts\pip.exe install) = selenium, cmd
4.  Add C:\Python27 to the system environment path.
5. Fire up the shell (double-click on SeleniumShell.py, or from a command prompt/terminal, say "python SeleniumShell.py")
6.  Make sure config.txt contains the right set of values (geckodriver_path, primarily)
7.  Start by typing "?" in the shell.
8.  Rest should be self-explanatory.  If it isn't, please revert.

Additional notes
==============
Videos uploaded:

https://www.youtube.com/watch?v=0wdqovuE3vs
https://www.youtube.com/watch?v=NLgJlAJX_Os

Demos folder consists of two recorded scripts.  Check them out.